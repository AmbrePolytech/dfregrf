package firmwarecomparingtool;


import java.awt.Dimension;

import javax.swing.*;

@SuppressWarnings("serial")
public class View extends JFrame {
	protected JButton bLength;
	protected JButton bMd5;
	protected JButton bSha1;
	protected JButton bByte;
	protected JButton bSuspect;
	protected JButton bText;
	protected JButton bBase;
	protected JButton bBrowse;
	protected JButton bFind;
	protected JButton bImport;
	
	protected JTextField pSuspect;
	protected JTextField nVendor;
	protected JTextField nModel;
	protected JTextField nVersion;
	
	protected JTextArea tMsg;
	

	public View() {
		super();
		JPanel pan = new JPanel();
		this.bLength = new JButton("Length");
		this.bLength.setText("Length");
		this.bLength.setEnabled(false);
		this.bMd5 = new JButton("MD5");
		this.bMd5.setText("MD5");
		this.bMd5.setEnabled(false);
		this.bSha1 = new JButton("SHA1");
		this.bSha1.setText("SHA1");
		this.bSha1.setEnabled(false);
		this.bByte = new JButton("Byte");
		this.bByte.setText("Byte");
		this.bByte.setEnabled(false);
		this.bBase = new JButton("OK");
		this.bBase.setText("OK");
		this.bBase.setEnabled(true);
		this.bBrowse = new JButton("Browse");
		this.bBrowse.setText("Browse");
		this.bBrowse.setEnabled(true);
		this.pSuspect = new JTextField("Suspect path");
		this.pSuspect.setPreferredSize(new Dimension(200,25));
		this.nModel = new JTextField("Model Name");
		this.nModel.setPreferredSize(new Dimension(200,25));
		this.nVendor = new JTextField("Vendor Name");
		this.nVendor.setPreferredSize(new Dimension(200,25));
		this.nVersion = new JTextField("Version Number");
		this.nVersion.setPreferredSize(new Dimension(200,25));
		this.bSuspect = new JButton("OK");
		this.bSuspect.setText("OK");
		this.bText = new JButton("Text Export");
		this.bText.setText("Text Export");
		this.bText.setEnabled(false);
		this.bImport = new JButton("Open Import");
		this.bFind = new JButton("Find");
		this.bFind.setText("Find");
		this.bFind.setEnabled(false);
		this.tMsg = new JTextArea("Log\n\n",23,70);
		//this.tMsg.setPreferredSize(new Dimension(700,400));
		this.tMsg.setEditable(false);
		this.tMsg.setLineWrap(true);
		JScrollPane scroll = new JScrollPane (this.tMsg);
	    scroll.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
	    scroll.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_AS_NEEDED);
	    scroll.setBounds(10,60,800,400);
		
		pan.add(this.pSuspect);
		pan.add(this.bSuspect);
		pan.add(this.bBrowse);
		pan.add(this.bLength);
		pan.add(this.bMd5);
		pan.add(this.bSha1);
		pan.add(this.bByte);
		pan.add(this.bFind);
		pan.add(this.bText);
		pan.add(this.nVendor);
		pan.add(this.nModel);
		pan.add(this.nVersion);
		pan.add(this.bBase);
		//pan.add(this.tMsg);
		pan.add(scroll);
		
		this.add(pan);
		this.setSize(900, 500);
		this.setVisible(true);
	}

	public JButton getbFind() {
		return bFind;
	}

	public JButton getbBrowse() {
		return bBrowse;
	}

	public JButton getbText() {
		return bText;
	}

	public JButton getbBase() {
		return bBase;
	}

	public JTextField getnVendor() {
		return nVendor;
	}

	public JTextField getnModel() {
		return nModel;
	}

	public JTextField getnVersion() {
		return nVersion;
	}

	public JButton getbSuspect() {
		return bSuspect;
	}

	public JButton getbLength() {
		return bLength;
	}

	public JButton getbMd5() {
		return bMd5;
	}

	public JButton getbSha1() {
		return bSha1;
	}

	public JButton getbByte() {
		return bByte;
	}

	public JTextField getpSuspect() {
		return pSuspect;
	}

	public JTextArea gettMsg() {
		return tMsg;
	}
	
	public static class Test {
		public static void main(String[] args) {
			View v = new View();
		}
	}
}
